{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["state","action","type","transactions","filter","item","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","transaction","amount","reduce","acc","toFixed","Typography","variant","align","gutterBottom","useStyles","makeStyles","theme","container","padding","spacing","marginBottom","backgroundColor","palette","grey","borderRadius","shape","grid","borderRight","divider","income","color","success","main","expense","error","IncomeExpenses","classes","amounts","Container","maxWidth","className","Grid","alignItems","xs","list","height","overflowX","listItem","margin","expenseListItem","red","incomeListItem","green","TransactionList","List","dense","component","ListItem","key","ListItemText","primary","text","secondary","Math","abs","ListItemSecondaryAction","IconButton","onClick","edge","submit","errorAlert","border","light","moneyType","AddTransaction","useForm","register","handleSubmit","errors","control","onSubmit","data","newTransaction","floor","random","TextField","name","label","size","fullWidth","inputRef","required","Box","FormControl","InputLabel","as","Select","defaultValue","MenuItem","inputProps","inputMode","InputProps","startAdornment","InputAdornment","position","pattern","Button","containerStyles","marginTop","display","flexDirection","App","style","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16a98ab9.chunk.js","sourcesContent":["// The 'state' parameter for the useReducer function  \n// is the current state. The action is a function that gets\n// called to update the state.\nexport default (state, action) => {\n  switch (action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        // Preserve the rest of the GlobalContext object unchanged\n        ...state,\n        // Only modify the transactions array to delete one entry\n        transactions: state.transactions.filter(item => item.id !== action.payload)\n      }\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        // Modify the transactions array push a new entry\n        transactions: [action.payload, ...state.transactions]\n      }\n    default:\n      return state\n  }\n}","import React, { createContext, useReducer } from 'react'\nimport AppReducer from './AppReducer'\n\n// This section would come from a database\n// If an API is setup for the project\nconst initialState = {\n  transactions: []\n}\n\n// The global context becomes a single source of truth\n// Any child element can grab states from it\nexport const GlobalContext = createContext(initialState)\n  \n// The global provider gives children elements access to \n// the global context\nexport const GlobalProvider = ({ children }) => {\n  // A reducer function enables the consumption and modification of states\n  const [state, dispatch] = useReducer(AppReducer, initialState)\n\n  // The dispatch functions are passed to the global provider\n  // This way they can be called from any element\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    })\n  }\n\n  // The 'type' is a convention to identify the function\n  // in a switch statement. The payload is optional for dispatch\n  function addTransaction(item) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: item\n    })\n  }\n\n  return (\n    <GlobalContext.Provider value={{\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    }}>\n      {children}\n    </GlobalContext.Provider>\n  )\n}","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { Typography } from '@material-ui/core';\n\nexport default function Balance() {\n  const { transactions } = useContext(GlobalContext)\n\n  const amounts = transactions.map(transaction => transaction.amount)\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2)\n\n  return (\n    <>\n      <Typography variant=\"h4\" align='center' gutterBottom>\n        Finance Tracker\n      </Typography>\n      <Typography gutterBottom>\n        Your balance:\n      </Typography>\n      <Typography variant=\"h4\" gutterBottom>\n        ${total}\n      </Typography>\n    </>\n  )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport {\n  Typography,\n  Grid,\n  Container,\n  makeStyles\n} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 0),\n    marginBottom: theme.spacing(2),\n    backgroundColor: theme.palette.grey[100],\n    borderRadius: theme.shape.borderRadius,\n  },\n  grid: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  income: {\n    color: theme.palette.success.main,\n  },\n  expense: {\n    color: theme.palette.error.main,\n  },\n}))\n\nexport default function IncomeExpenses() {\n  const classes = useStyles()\n  const { transactions } = useContext(GlobalContext)\n  // Create a new array only containing the numeric values\n  const amounts = transactions.map(item => item.amount)\n\n  // Sum up the positive values\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2)\n  \n  // Sum up the negative values\n  const expense = (amounts\n    .filter(item => item < 0)\n    .reduce((acc, item) => (acc += item), 0) * -1)\n    .toFixed(2)\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <Grid container alignItems='center'>\n        <Grid item xs={6} className={classes.grid}>\n          <Typography variant=\"h6\" align='center' gutterBottom>\n            Income\n          </Typography>\n          <Typography align='center' variant=\"body1\" className={classes.income}>\n            +${income}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"h6\" align='center' gutterBottom>\n            Expenses\n          </Typography>\n          <Typography align='center' variant=\"body1\" className={classes.expense}>\n            -${expense}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { green, red } from '@material-ui/core/colors'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    height: '225px',\n    padding: theme.spacing(0, 1),\n    marginBottom: theme.spacing(2),\n    overflowX: 'auto',\n    backgroundColor: theme.palette.grey[200],\n    borderRadius: theme.shape.borderRadius,\n  },\n  listItem: {\n    margin: theme.spacing(1, 0),\n    backgroundColor: theme.palette.grey[50],\n    borderRadius: theme.shape.borderRadius,\n  },\n  expenseListItem: {\n    color: red[600],\n  },\n  incomeListItem: {\n    color: green[600],\n  },\n}))\n\nexport default function TransactionList() {\n  const classes = useStyles()\n  const { transactions, deleteTransaction } = useContext(GlobalContext)\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        History\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <List dense component=\"nav\" className={classes.list}>\n            {/* Generate all the list items from the GlobalContext */}\n            {transactions.map(item => (\n              <ListItem key={item.id} className={classes.listItem}>\n                <ListItemText\n                  primary={item.text}\n                  classes={{ secondary: item.type === '+' ? classes.incomeListItem : classes.expenseListItem }}\n                  secondary={`${item.type}$${Math.abs(item.amount).toFixed(2)}`}\n                />\n                {/* Delete button */}\n                <ListItemSecondaryAction>\n                  <IconButton onClick={() => deleteTransaction(item.id)} edge=\"end\">\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n","import React, { useContext } from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport { GlobalContext } from '../context/GlobalState'\nimport {\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  InputAdornment,\n  makeStyles,\n  Box,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel\n} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    margin: theme.spacing(2, 0, 1),\n  },\n  errorAlert: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(1, 0),\n    border: `2px solid ${theme.palette.error.light}`,\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.error.main,\n  },\n  moneyType: {\n    padding: theme.spacing(0, 'auto')\n  },\n}))\n\nexport default function AddTransaction() {\n  const classes = useStyles()\n  // Use react-hook-form to simplify forms\n  const { register, handleSubmit, errors, control } = useForm()\n  const { addTransaction } = useContext(GlobalContext)\n\n  function onSubmit(data) {\n    // data contains the use input\n    const newTransaction = {\n      // Generate a random id to comply with React's mapping\n      // This can be improved using UUID\n      id: Math.floor(Math.random() * 100000000),\n      text: data.text,\n      // Depending on Income or Expense, make number positive or negative\n      // Remeber all user input is returned as a string regardless of the HTML\n      amount: data.type === '+' ? +data.amount : (data.amount * -1),\n      type: data.type\n    }\n    addTransaction(newTransaction)\n  }\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        New transaction\n      </Typography>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              name=\"text\"\n              label=\"Name\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n              inputRef={register({ required: true })}\n            />\n            {/* The Alert component should be used once it enters the stable release. */}\n            {errors.text && <Box className={classes.errorAlert}>The expense's name is required.</Box>}\n          </Grid>\n          <Grid item xs={4}>\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\n              <InputLabel>Type</InputLabel>\n              {/* The controller element is provided by react-hook-form */}\n              {/* It accomodates special input fields like this one. */}\n              <Controller\n                as={Select}\n                name=\"type\"\n                label=\"Type\"\n                control={control}\n                defaultValue=\"+\"\n              >\n                <MenuItem value={'+'}>Income</MenuItem>\n                <MenuItem value={'-'}>Expense</MenuItem>\n              </Controller>\n            </FormControl>\n          </Grid>\n          <Grid item xs={8}>\n            <TextField\n              name=\"amount\"\n              fullWidth\n              inputProps={{inputMode: \"decimal\"}}\n              label=\"Amount\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    $\n                  </InputAdornment>\n                ),\n              }}\n              inputRef={register({\n                required: true,\n                // This regex allows for currency numbers 12.99\n                pattern: /^[0-9]+(\\.[0-9]{1,2})?$/\n              })}\n              variant=\"outlined\"\n              size=\"small\"\n            />\n            {errors.amount && errors.amount.type === \"pattern\" && <Box className={classes.errorAlert}>Only insert digits, 0 through 9.</Box>}\n            {errors.amount && errors.amount.type === \"required\" && <Box className={classes.errorAlert}>The amount is required.</Box>}\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Add transaction\n        </Button>\n      </form>\n    </>\n  )\n}\n","import React from 'react'\nimport Balance from './components/Balance'\nimport IncomeExpenses from './components/IncomeExpenses'\nimport TransactionList from './components/TransactionList'\nimport AddTransaction from './components/AddTransaction'\nimport { GlobalProvider } from './context/GlobalState'\nimport { Container } from '@material-ui/core';\n\nconst containerStyles = {\n  marginTop: '15px',\n  display: 'flex',\n  flexDirection: 'column',\n}\n\nexport default function App() {\n  return (\n    <GlobalProvider>\n      <Container\n        component=\"main\"\n        maxWidth=\"xs\"\n        style={containerStyles}\n      >\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </Container>\n    </GlobalProvider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n"],"sourceRoot":""}